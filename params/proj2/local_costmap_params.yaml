footprint: [[-0.25, -0.18], [0.25, -0.18], [0.25, 0.18], [-0.25, 0.18]] #wielokat symbolizujacy robota
rolling_window: true #okresla czy mapa podaza za robotem
global_frame: base_link #nazwa globalnego frame'a dla mapy
robot_base_frame: base_link #nazwa frame'a dla base link robota
height: 5 #dlugosc mapy
width: 5 #szerokosc mapy
update_frequency: 30 #czestotliwosc odswiezania mapy
publish_frequency: 20 #czestotliwosc publikowania mapy
always_send_full_costmap: true #wysylanie pelnej mapy kosztow
origin_x: -2.5 #wspolrzedna x lewego dolnego rogu mapy
origin_y: -2.5 #wspolrzedna y lewego dolnego rogu mapy
resolution: 0.05 #rozdzielczosc mapy

plugins: 
    - {name: obstacles,        type: "costmap_2d::VoxelLayer"} #plugin do wykrywania przeszkod
    - {name: inflation_layer,     type: "costmap_2d::InflationLayer"} #plugin do uruchomienia "nadmuchania" scian

obstacles:
   observation_sources: base_scan #zrodlo (czujnik) wykrywania przeszkod
   unknown_threshold:    15 #maksymalna liczba nieznanych komorek dozwolonych w kolumnie by była uznawana za "known"
   mark_threshold:       0 #maksymalna liczba zaznaczonych komorek dozwolonych w kolumnie by była uznawana za "free" 
   track_unknown_space:  true #true - kazdy pixel ma 3 stany : lethal, free, unknown, false - -||- ma 2 stany: lethal, free
   obstacle_range: 2 #maksymalny zasieg w metrach przy ktorym usuwac przeszkody z mapy
   raytrace_range: 2.5 #maksymalny zasieg w metrach przy ktorym nanosic przeszkody na mape
   base_scan: 
      data_type: LaserScan #typ danych ze skanera laserowego
      topic: laser_scan #topic na ktorym nadawane sa dany z skanera laserowego
      marking: true #czy skaner ma byc uzyty do nanoszenia przeszkod na mape
      clearing: true #czy skaner ma byc uzyty do czyszczenia wolnej przestrzeni
      expected_update_rate: 30

inflation_layer: 
   inflation_radius: 0.31 #promien "nadmuchania" przszkod
   cost_scaling_factor: 10.0 #wspolczynnik scalujacy "nadmuchanie" scian
